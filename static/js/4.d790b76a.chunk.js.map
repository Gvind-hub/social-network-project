{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","state","auth","module","exports","DialogItem","path","id","className","s","dialog","active","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator"],"mappings":"8NAIaA,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMC,OAET,kBAACJ,EAAcE,KAAKC,OAFI,kBAAC,IAAD,CAAUE,GAAG,eAHT,GACXC,IAAMN,WAetC,OAFqCO,aALJ,SAACC,GAAD,MAAY,CAEzCJ,OAAQI,EAAMC,KAAKL,UAGcG,CAAoCN,K,oBCjB7ES,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCcpMC,EAVI,SAACT,GAChB,IAAIU,EAAO,YAAcV,EAAMW,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASb,GAAIQ,GAAOV,EAAMgB,QCCvBC,EAPC,SAACjB,GACb,OACI,yBAAKY,UAAWC,IAAEK,SAAUlB,EAAMkB,U,yCCGpCC,EAAcC,YAAiB,IAa/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAXL,SAACtB,GACpB,OACI,0BAAMwB,SAAUxB,EAAMyB,cAClB,6BAAK,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAcH,KAAK,iBAAiBe,YAAY,wBACtG,6BACI,qDAsCDC,EA9BC,SAAChC,GACb,IAAIK,EAAQL,EAAMiC,YACdC,EAAkB7B,EAAM8B,QAAQC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMsB,IAAKD,EAAE1B,GAAIA,GAAI0B,EAAE1B,QACrF4B,EAAmBlC,EAAMmC,SAASJ,KAAK,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAE9B,QAQpF,OAAKX,EAAMC,OAGP,yBAAKW,UAAWC,IAAEsB,SACd,yBAAKvB,UAAWC,IAAE6B,cACZR,GAEN,yBAAKtB,UAAWC,IAAE2B,UACd,6BAAMD,IAEV,kBAAClB,EAAD,CAAqBG,SAfT,SAACmB,GACjB3C,EAAM4C,YAAYD,EAAOE,oBAIH,kBAAC,IAAD,CAAU3C,GAAI,Y,wBCZ7B4C,sBACX1C,aAhBkB,SAACC,GACnB,MAAO,CACH4B,YAAa5B,EAAM4B,gBAIF,SAACc,GACtB,MAAO,CAEHH,YAAa,SAACC,GACVE,EAASC,YAAmBH,SAOpCjD,IAFWkD,CAGbd","file":"static/js/4.d790b76a.chunk.js","sourcesContent":["import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n\n            return <Component {...this.props} />\n        }\n    }\n\n    let mapStateToPropsForRedirect = (state) => ({\n\n        isAuth: state.auth.isAuth\n\n    })\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2vTQH\",\"dialogsItems\":\"Dialogs_dialogsItems__23Rmc\",\"active\":\"Dialogs_active__kZGm1\",\"dialog\":\"Dialogs_dialog__34Iaf\",\"messages\":\"Dialogs_messages__2j7se\",\"message\":\"Dialogs_message__WYwda\"};","import React from 'react';\nimport s from '../Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\n\nconst DialogItem = (props) => {\n    let path = \"/dialogs/\" + props.id;\n\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    );\n};\n\nexport default DialogItem;","import React from 'react';\nimport s from '../Dialogs.module.css';\n\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>{props.message}</div>\n    );\n};\n\n\nexport default Message;","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Redirect} from \"react-router-dom\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../Utils/Validators/validators\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div><Field component={Textarea} validate={[required, maxLength50]} name=\"newMessageBody\" placeholder=\"Enter your message\" /></div>\n            <div>\n                <button>Send Message</button>\n            </div>\n        </form>\n    )\n};\n\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageFrom'})(AddMessageForm);\n\nconst Dialogs = (props) => {\n    let state = props.dialogsPage;\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />);\n    let messagesElements = state.messages.map (m => <Message message={m.message} key={m.id}/>);\n\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    };\n\n    //redirect\n    if (!props.isAuth) return <Redirect to={\"/login\"}/> ;\n///////////////////////////////////////////////\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                { dialogsElements }\n            </div>\n            <div className={s.messages}>\n                <div>{messagesElements}</div>\n            </div>\n            <AddMessageFormRedux onSubmit={addNewMessage} />\n\n            </div>\n       \n    );\n};\n\n\n\nexport default Dialogs;","import React from 'react';\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody));\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n\n// compose(\n//     connect(mapStateToProps, mapDispatchToProps),\n//     withAuthRedirect\n// )(Dialogs)\n\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\n//\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\n//\n// export default DialogsContainer;"],"sourceRoot":""}