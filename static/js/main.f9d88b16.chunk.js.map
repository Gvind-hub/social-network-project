{"version":3,"sources":["Assets/Images/icons-user.png","api/api.js","redux/dialogs-reducer.js","components/Navbar/FriendsList/FriendsList.module.css","components/Users/users.module.css","Assets/Images/preloader.gif","components/Navbar/Navbar.module.css","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","Utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","hoc/withSuspense.js","App.js","serviceWorker.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js","components/common/FormsControls/FormsControls.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","Utils/Validators/validators.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","Navbar","props","className","s","nav","item","to","activeClassName","activeLink","News","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","alt","loginBlock","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","length","stopSubmit","_error","formData","initialaized","appReducer","withSuspense","Suspense","fallback","ProfileContainer","lazy","DialogsContainer","App","initializeApp","initialized","path","render","app","promise","Promise","all","withRouter","Boolean","window","location","hostname","match","friends","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sideBar","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","backgroundColor","preloader","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.f9d88b16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icons-user.888fa4eb.png\";","import * as axios from \"axios\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        \"API-KEY\": \"4b6157dc-cefb-4ce3-bffb-2bb594c8fc04\"\n    }\n});\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data;\n            });\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId) {\n        console.warn('Obsolete method. Please use profileAPI object. ');\n        return profileAPI.getProfile(userId);\n    }\n};\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status/`, { status: status });\n    }\n};\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login`, { email, password, rememberMe });\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n}\n\n","const SEND_MESSAGE = 'SEND-MESSAGE';\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\n\nlet initialState = {\n    dialogs: [\n        {id: 1, name: 'Dimych'},\n        {id: 2, name: 'Andrey'},\n        {id: 3, name: 'Sveta'},\n        {id: 4, name: 'Sasha'},\n        {id: 5, name: 'Viktor'},\n        {id: 6, name: 'Valera'}],\n    messages: [\n        {id: 1, message: 'Hi!'},\n        {id: 2, message: 'How are you?'},\n        {id: 3, message: 'Yo'},\n        {id: 4, message: 'Yo'},\n        {id: 5, message: 'Yo'},\n        {id: 6, message: 'Yo'}],\n};\n\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SEND_MESSAGE:\n            let body = action.newMessageBody;\n            return  {\n                ...state,\n                messages: [...state.messages, {id: 7, message: body}]\n            };\n        default:\n            return state;\n    }\n\n    return state;\n};\n\nexport const sendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody });\n\n\n\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsList\":\"FriendsList_friendsList__1q5GF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3SOv1\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.3d1b739f.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3FaVJ\",\"item\":\"Navbar_item__Yr_Xa\",\"activeLink\":\"Navbar_activeLink__sDi6N\",\"friendsList\":\"Navbar_friendsList__xtrjA\",\"friends_wrapper\":\"Navbar_friends_wrapper__2f1VF\"};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport FriendsList from \"./FriendsList/FriendsList\";\r\n\r\nconst Navbar = (props) => {\r\n\r\n    // let friendElement = props.state.friends.map(f => <FriendsList name={f.name} id={f.id}/>);\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n            {/*<div className={s.friends_wrapper}>*/}\r\n            {/*    <h3>Friends:</h3>*/}\r\n            {/*    <div className={s.friendsList}>*/}\r\n            {/*        {friendElement}*/}\r\n            {/*    </div>*/}\r\n            {/*</div>*/}\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\nimport s from './News.module.css';\n\nconst News = (props) => {\n    return(\n        <div>\n            Dialogs\n        </div>\n    );\n};\n\nexport default News;","import React from 'react';\nimport s from './Music.module.css';\n\nconst Music = (props) => {\n    return(\n        <div>\n            Dialogs\n        </div>\n    );\n};\n\nexport default Music;","import React from 'react';\nimport s from './Settings.module.css';\n\nconst Settings = (props) => {\n    return(\n        <div>\n            Dialogs\n        </div>\n    );\n};\n\nexport default Settings;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map(u => {\n        if (u[objPropName] === itemId) {\n            return {...u, ...newObjProps}\n        }\n        return u;\n    })\n}","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../Utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false, //loading\n    followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\n                // users: state.users.map(u => {\n                //     if (u.id === action.userId) {\n                //         return {...u, followed: true}\n                //     }\n                //     return u;\n                // })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\n                // users: state.users.map(u => {\n                //     if (u.id === action.userId) {\n                //         return {...u, followed: false}\n                //     }\n                //     return u;\n                // })\n            }\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.count}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n\n\n};\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\nexport const setUsers = (users) => ({type: SET_USERS, users});\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\n\n\n\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n        let data = await usersAPI.getUsers(page, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n};\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n    if (response.data.resultCode === 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport const follow = (userId) => {\n    return (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n    }\n};\n\nexport const unfollow = (userId) => {\n    return (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n    }\n};\n\nexport default usersReducer;\n\n// export const follow = (userId) => {\n//     return async (dispatch) => {\n//         let apiMethod = usersAPI.follow.bind(usersAPI);\n//         let actionCreator = followSuccess;\n//         dispatch(toggleFollowingProgress(true, userId));\n//         let response = await apiMethod(userId);\n//         if (response.data.resultCode === 0) {\n//             dispatch(actionCreator(userId));\n//         }\n//         dispatch(toggleFollowingProgress(false, userId));\n//     }\n// };\n//\n// export const unfollow = (userId) => {\n//     return async (dispatch) => {\n//         let apiMethod = usersAPI.unfollow.bind(usersAPI)\n//         let actionCreator = unfollowSuccess;\n//         dispatch(toggleFollowingProgress(true, userId));\n//         let response = await apiMethod(userId)\n//         if (response.data.resultCode === 0) {\n//             dispatch(actionCreator(userId));\n//         }\n//         dispatch(toggleFollowingProgress(false, userId));\n//     }\n// };\n\n","import React, {useState} from \"react\";\nimport styles from \"./Paginator.module.css\";\nimport cn from 'classnames'\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionNumber = portionNumber * portionSize;\n\n    return <div className={styles.paginator}>\n        { portionNumber > 1 &&\n        <button onClick={() => setPortionNumber(portionNumber -1) }>PREV</button>}\n\n        {pages\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionNumber)\n            .map((p) => {\n            return <span className={ cn({[styles.selectedPage]:currentPage === p }, styles.pageNumber) }\n                         key={p} onClick={(e) => onPageChanged(p)}>{p}</span>\n        })}\n\n        { portionCount > portionNumber &&\n        <button onClick={() => setPortionNumber(portionNumber +1) }>NEXT</button>}\n    </div>\n}\n\n\nexport default Paginator;","import React from \"react\";\nimport styles from \"./users.module.css\";\nimport userPhoto from '../../Assets/Images/icons-user.png'\nimport {NavLink} from \"react-router-dom\";\nimport Paginator from \"../common/Paginator/Paginator\";\n\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n        return <div>\n                    <span>\n                        <div>\n                            <NavLink to={'/profile/' + user.id}>\n                            <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto}/>\n                            </NavLink>\n                        </div>\n                        <div>\n                            {user.followed\n                                ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n                                    unfollow(user.id)}}>Unfollow</button>\n                                : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n                                    follow(user.id)}}>Follow</button>}\n\n                        </div>\n                    </span>\n                        <span>\n                        <span>\n                            <div>{user.name}</div>\n                            <div>{user.status}</div>\n                        </span>\n                        <span>\n                            <div>{'u.location.country'}</div>\n                            <div>{'u.location.city'}</div>\n                        </span>\n                    </span>\n                    </div>\n\n    }\n\n\nexport default User;","import React from \"react\";\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\n\n\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\n        return <div>\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n                       totalItemsCount={totalUsersCount} pageSize={pageSize}/>\n            <div>\n                {\n                    users.map(u => <User user={u} key={u.id} followingInProgress={props.followingInProgress}\n                    unfollow={props.unfollow} follow={props.follow} />)\n                }\n            </div>\n        </div>\n    }\n\n\nexport default Users;","import {createSelector} from \"reselect\";\n\nconst getUsersSelector = (state) => {\n    return state.usersPage.users;\n};\n\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n    return users.filter(u=> true);\n});\n\n\n// export const getUsersSuper= (state) => {\n//     return getUsers(state).filter(u=> true);\n// };\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n};\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount;\n};\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n};\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n};\n\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n};\n\n\n\n\n// export const getUsersSuperSelector = createSelector(getUsers, getIsFetching, (users, isFetching) => {\n//     return users.filter(u=> true);\n// });","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {follow, followSuccess, requestUsers, setCurrentPage, toggleFollowingProgress, unfollow, unfollowSuccess} from \"../../redux/users-reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers} from \"../../redux/users-selectors\";\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.getUsers(currentPage, pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        const {pageSize} = this.props;\n        this.props.getUsers(pageNumber, pageSize);\n        this.props.setCurrentPage(pageNumber);\n    };\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n\n}\n\n// let mapStateToProps = (state) => {\n//     return {\n//         users: state.usersPage.users,\n//         pageSize: state.usersPage.pageSize,\n//         totalUsersCount: state.usersPage.totalUsersCount,\n//         currentPage: state.usersPage.currentPage,\n//         isFetching: state.usersPage.isFetching,\n//         followingInProgress: state.usersPage.followingInProgress,\n//\n//     }\n// };\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state),\n\n    }\n};\n\n///let withRedirect = withAuthRedirect(UsersContainer)\n\nexport default compose(\n    connect(mapStateToProps, {\n            followSuccess, unfollowSuccess,\n            setCurrentPage, follow, unfollow,\n            toggleFollowingProgress, getUsers: requestUsers\n        }),\n    //withAuthRedirect\n)(UsersContainer);\n\n//\n// export default withAuthRedirect(connect(mapStateToProps, {\n//     followSuccess, unfollowSuccess,\n//     setCurrentPage, follow, unfollow,\n//     toggleFollowingProgress, getUsers\n// })(UsersContainer));\n\n// let mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (userId) => {\n//             dispatch(followAC(userId));\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unfollowAC(userId));\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users));\n//         },\n//         setCurrentPage: (pageNumber) => {\n//             dispatch(setCurrentPageAC(pageNumber));\n//         },\n//         setTotalUsersCount: (totalCount) => {\n//             dispatch(setTotalUsersCountAC(totalCount));\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(toggleIsFetchingAC(isFetching));\n//         }\n//     }\n// };\n\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <img src=\"https://www.freelogodesign.org/Content/img/logo-ex-7.png\" alt=\"logo\" />\r\n      <div className={s.loginBlock}>\r\n          { props.isAuth\r\n              ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n              : <NavLink to={'/login'}>Login</NavLink>\r\n          }\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\"\n\nconst SET_USER_DATA = 'SET_USER_DATA';\n\nlet initialState = {\n    id: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    isFetching: false //loading\n};\n\nconst authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n            }\n\n        default:\n            return state;\n    }\n\n\n};\n\nexport const setAuthUserData = (id, email, login, isAuth) => ({type: SET_USER_DATA, payload: {id, email, login, isAuth}});\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n};\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData());\n    } else {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n        dispatch(stopSubmit('login', {_error: message}));\n\n    }\n};\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n        if (response.data.resultCode === 0) {\n            dispatch(setAuthUserData(null, null, null, false));\n        }\n};\n\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {getAuthUserData, logout} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n      render() {\r\n        return <Header {...this.props} />\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n\r\n});\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../Utils/Validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        {createField('email', 'email', [required], Input)}\r\n        {createField('password', 'password', [required], Input, {type: 'password'})}\r\n        {createField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'remember me')}\r\n        {/*<div>*/}\r\n        {/*    <Field placeholder={'email'} name={'email'} validate={[required]} component={Input}/>*/}\r\n        {/*</div>*/}\r\n        {/*<div>*/}\r\n        {/*    <Field placeholder={'password'} name={'password'} type={'password'} validate={[required]} component={Input}/>*/}\r\n        {/*</div>*/}\r\n        {/*<div>*/}\r\n        {/*    <Field component={Input} name={'rememberMe'} type={'checkbox'}/>*/}\r\n        {/*    <span>remember me</span>*/}\r\n        {/*</div>*/}\r\n\r\n        { error && <div className={style.formSummaryError}>{error}</div> }\r\n\r\n        <div>\r\n            <button>login</button>\r\n        </div>\r\n    </form>\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\"\nimport {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\nlet initialState = {\n    initialaized: false,\n};\n\nconst appReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialaized: true,\n            }\n\n        default:\n            return state;\n    }\n\n\n};\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n    Promise.all([promise]).then( () => {\n        dispatch(initializedSuccess());\n    })\n};\n\n\nexport default appReducer;","import React from \"react\";\nimport Preloader from \"../components/common/Preloader/Preloader\";\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <React.Suspense fallback={<Preloader/>}>\n            <Component {...props}/>\n        </React.Suspense>\n    }\n}\n","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route, withRouter} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n//import ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\n                    <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialaized\n})\n\nexport default compose(\n    connect(mapStateToProps, {initializeApp}),\n    withRouter,\n)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\n    friends: [\n        {id: 1, name: 'Andrey'},\n        {id: 2, name: 'Sveta'},\n        {id: 3, name: 'Sasha'}]\n};\nconst sidebarReducer = (state = initialState, action) => {\n\n    return state;\n};\n\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer} from 'redux-form';\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sideBar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n});\n\n//Redux dev tools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <BrowserRouter>\n                <Provider store={store}>\n                    <App />\n                </Provider>\n            </BrowserRouter>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport styles from \"./FormsControls.module.css\"\nimport {required} from \"../../../Utils/Validators/validators\";\nimport {Field} from \"redux-form\";\n\n\nconst FormControl = ({input, meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n\n};\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n};\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n};\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\n    <div><Field placeholder={placeholder} name={name} validate={validators} component={component} {...props}/>{text}</div>\n)\n\n// export const Textarea = ({input, meta, ...props}) => {\n//     const hasError = meta.touched && meta.error;\n//     return (\n//         <div className={styles.formControl + \" \" + (hasError? styles.error : \"\")}>\n//             <div>\n//                 <textarea {...input} {...props} />\n//             </div>\n//             {hasError && <span>{meta.error}</span>}\n//         </div>\n//     )\n// };\n//\n// export const Input = ({input, meta, ...props}) => {\n//     const hasError = meta.touched && meta.error;\n//     return (\n//         <div className={styles.formControl + \" \" + (hasError? styles.error : \"\")}>\n//             <div>\n//                 <input {...input} {...props} />\n//             </div>\n//             {hasError && <span>{meta.error}</span>}\n//         </div>\n//     )\n// }","import preloader from \"../../../Assets/Images/preloader.gif\";\nimport React from \"react\";\n\nlet Preloader = (props) => {\n    return <div style ={ { backgroundColor: 'white'} }>\n        <img src={preloader} />\n    </div>\n\n}\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__37BcI\",\"error\":\"FormsControls_error__YvsLJ\",\"formSummaryError\":\"FormsControls_formSummaryError__1kMuM\"};","export const required = (value) => {\n    if (value) return undefined;\n    return \"Field is required\";\n};\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n        if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n        return undefined;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__eMTUK\",\"pageNumber\":\"Paginator_pageNumber__2eBtg\",\"selectedPage\":\"Paginator_selectedPage__pOXvn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__xEi0q\",\"loginBlock\":\"Header_loginBlock__1nzIu\"};","import {profileAPI, usersAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\n\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hi, how are you?!', likesCount: 2},\n        {id: 2, message: 'It\\'s my first post', likesCount: 23}],\n    profile: null,\n    status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 3,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: ''\n            };\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile};\n\n        }\n        case SET_STATUS: {\n            return {...state, status: action.status};\n        }\n        case DELETE_POST: {\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)};\n        }\n        default:\n            return state;\n\n    }\n};\n\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\n\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\nexport const setStatus = (status) => ({type: SET_STATUS, status});\n\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response.data));\n};\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response.data));\n};\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status);\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n};\n\n\nexport default profileReducer;"],"sourceRoot":""}